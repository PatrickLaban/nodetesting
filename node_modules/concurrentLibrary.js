/**
 * Created by Patrick on 2/16/2016.
 */
var requestCounter = {};
/*
{uuid:
    {'timestamp': 43,
     'executedCount' 2,
     'requestQueue': []}
     }

 */

var limit = function(userID, requestFunction) {
    console.log('entering limiter');
    if (requestCounter.hasOwnProperty(userID)) {
        console.log('adding request to queue');
        // Add the call to the correct queue
        requestCounter[userID]['requestQueue'].push(requestFunction);
    } else {
        console.log('new user setup')
        // Setup the user in the request counter and start the deque interval mechanism
        requestCounter[userID] = {
            'timestamp': Date.now(),
            'executedCount': 0,
            'requestQueue': [requestFunction]
        };
        // This isn't the best solution but I'm short on time
        // We simply try to run every 10 milliseconds
        // This will pull the first item off the queue
        // Once the executed count hits 10 it won't pull
        // till it's reset
        setInterval(function() {
            if ((requestCounter[userID]['executedCount'] < 10) && (requestCounter[userID]['requestQueue'].length > 0)) {
                requestCounter[userID]['executedCount']++;
                var callbackFunction = requestCounter[userID]['requestQueue'].shift();
                callbackFunction();
            }
            // TODO: Clear this interval if the queue is empty for more then a second
            var timestamp = Date.now();
            if (timestamp - requestCounter[userID]['timestamp'] > 1000) {
                // New second, set the new timestamp and reset the executed count
                requestCounter[userID]['timestamp'] = timestamp;
                requestCounter[userID]['executedCount'] = 0;
            }
        }, 10);
    };
};

exports.limit = limit;